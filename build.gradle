plugins {
    id 'java'
    id 'application'
    id 'jacoco'
    id "org.openjfx.javafxplugin" version "0.0.8"
    id "org.sonarqube" version "3.0"
}

group 'de.brachwitz.leon'
version '1.0-SNAPSHOT'

mainClassName='de.brachwitz.leon.Main'

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.5.2'
    testCompile group: 'org.assertj', name: 'assertj-core', version: '3.17.2'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter', version: '5.5.2'
}

javafx {
    modules = ['javafx.controls', 'javafx.fxml']
    version = '14'
}

run {
    doFirst {
        jvmArgs = [
                '--module-path', classpath.asPath,
                '--add-modules', 'javafx.controls,javafx.fxml'
        ]
    }
}

test {
    useJUnitPlatform()
}

jacoco {
    toolVersion = "0.8.5"
    reportsDir = file("$buildDir/jacoco")
}

task mergeJacocoReports(type: JacocoReport) {
    dependsOn test
    sourceDirectories.setFrom files(sourceSets.main.allSource.srcDirs)
    classDirectories.setFrom files(sourceSets.main.output)
    executionData.setFrom project.fileTree(dir: '.', include: '**/build/jacoco/*.exec')
    reports {
        xml.enabled true
        csv.enabled false
        html.enabled true
        html.destination file("${buildDir}/jacoco/merge")
        xml.destination file("${buildDir}/jacoco/merge.xml")
    }
}

sonarqube {
    properties {
        property "sonar.projectKey", "LeonBrachwitz_Minesweeper"
        property "sonar.organization", "leonbrachwitz"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.coverage.jacoco.xmlReportPaths", "${buildDir}/jacoco/merge.xml"
    }
}

tasks['sonarqube'].dependsOn mergeJacocoReports